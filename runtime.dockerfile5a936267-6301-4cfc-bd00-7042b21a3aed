FROM amd64/ubuntu:22.04

ENV DEBIAN_FRONTEND noninteractive
# ENV TZ Asia/Tokyo
ENV LLVM_VERSION=15
ENV GCC_VERSION=11

RUN mkdir /root/tools
RUN mkdir /root/workspace
RUN mkdir /root/.config

# WORKDIR /root/workspace
# COPY build.sh build.sh
# COPY config.sh config.sh
# WORKDIR /root

# RUN apt-get install -y --no-install-recommends wget ca-certificates
RUN apt-get -y update
RUN apt-get -y full-upgrade
RUN apt-get install -y make \
cmake \
automake \
meson \
ninja-build \
flex \
hyperfine \
git \
xz-utils \
bzip2 \
wget \
jupp \
nano \
bash-completion \
less \
vim \
joe \
ssh \
psmisc \
python3 \
python3-dev \
python3-pip \
python-is-python3 \
libtool libtool-bin libglib2.0-dev \
apt-transport-https gnupg dialog \
gnuplot-nox libpixman-1-dev bc \
ca-certificates \
libssl-dev \
zlib1g-dev \
libbz2-dev \
libreadline-dev \
libsqlite3-dev \
curl \
zip \
unzip \
libncurses5-dev \
libncursesw5-dev \
tk-dev \
libxml2-dev \
libxmlsec1-dev \
libffi-dev \
liblzma-dev \
libyaml-dev \
tree \
neovim \
neofetch \
openssh-server \
patchelf \
elfutils \
file \
devscripts \
fish \
libjpeg-dev \
autogen \
autoconf \
texinfo \
libgmp-dev \
libmpfr-dev \
libasound2-dev \
libflac-dev \
libogg-dev \
libvorbis-dev \
libopus-dev \
pkg-config \
libc6-dev \
libfreetype6-dev \
ltrace \
afl \
m4 \
libseccomp-dev libseccomp2 seccomp \
ruby-dev \
gdb \
ripgrep
RUN rm -rf /var/lib/apt/lists/*

RUN chsh -s /bin/fish
RUN mkdir /root/.config/fish
# RUN /bin/fish -c "curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install jorgebucaran/fisher && fisher install oh-my-fish/theme-idan && fisher install sujaybokil/fish-gruvbox"

RUN pip install ptrlib pwntools bpython

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
RUN echo 'set -x PATH /root/.cargo/bin $PATH' >> /root/.config/fish/config.fish
ENV PATH $PATH:/root/.cargo/bin
RUN cargo install ropr bat eza pwninit
RUN echo 'alias bat="bat --theme=gruvbox-dark"' >> /root/.config/fish/config.fish
RUN echo 'alias ls="eza"' >> /root/.config/fish/config.fish

WORKDIR /root/tools

RUN wget -q https://raw.githubusercontent.com/bata24/gef/dev/install.sh -O- | sh
RUN echo '#!/bin/bash' > /usr/local/bin/ptr
RUN echo 'gdb -q -p $(pidof $1)' >> /usr/local/bin/ptr
RUN chmod +x /usr/local/bin/ptr
RUN echo 'set follow-fork-mode parent' >> /root/.gdbinit

RUN echo 'alias grep="rg"' >> /root/.config/fish/config.fish
RUN echo 'alias ptr="/usr/local/bin/ptr"' >> /root/.config/fish/config.fish

RUN gem install seccomp-tools --no-document --force

WORKDIR /root/

RUN git clone https://github.com/bminor/glibc
RUN ln -s /root/glibc /root/workspace/glibc
WORKDIR /root/
RUN git clone https://github.com/matrix1001/glibc-all-in-one
RUN ln -s /root/glibc-all-in-one /root/workspace/glibc-all-in-one

ENV LC_CTYPE C.UTF-8

RUN apt-get install -y gdb-multiarch \
                        gdbserver \
                        qemu-system-x86 \
                        cpio \
                        musl-tools

RUN wget https://ftp.gnu.org/gnu/bison/bison-3.5.1.tar.gz && \
    tar -xvf bison-3.5.1.tar.gz -C /home/${USERNAME}/ && \
    cd /home/${USERNAME}/bison-3.5.1 && \
    ./configure && make && make install && make clean

RUN cargo install starship 
RUN echo 'starship init fish | source' >> /root/.config/fish/config.fish
RUN starship preset nerd-font-symbols -o ~/.config/starship.toml

RUN rm -rf /var/lib/apt/lists/*

RUN echo 'set fish_color_command blue' >> ~/.config/fish/config.fish
RUN echo 'set fish_color_error red' >> ~/.config/fish/config.fish
RUN echo 'set fish_color_param green' >> ~/.config/fish/config.fish
RUN echo 'set fish_color_operator cyan' >> ~/.config/fish/config.fish


RUN echo "set -x LC_CTYPE C.UTF-8" >> /root/.config/fish/config.fish
WORKDIR /root/workspace

# COPY build.sh build.sh
# COPY config.sh config.sh
