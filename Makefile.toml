[env]
# used as directory of crate and program name
BOOTLOADER_NAME = "bootloader"
KERNEL_NAME = "kernel"
KERNEL_BUILD_TARGET_NAME = "x86_64-kernel"
RPNCALC_NAME = "rpncalc"
APPS_DIR = "apps"
APPS_BUILD_TARGET_NAME = "x86_64-app"
BUILD = "build"
MOUNT_POINT_NAME = "mnt"
DISK_IMAGE_NAME = "boot.img"
OVMF_FILE_NAME = "OVMF_CODE.fd"
RUST_TOOLCHAIN = ""

[tasks.ignore-members]
workspace = false

[tasks.build]
disabled = true

#
# create image
#
[tasks.make_image]
description = "Make a disk image"
script = [
    "qemu-img create -f raw ${BUILD}/${DISK_IMAGE_NAME} 200M",
    "mkfs.fat -n 'MAIZONO' -s 2 -f 2 -R 32 -F 32 ${BUILD}/${DISK_IMAGE_NAME}",
    "mkdir -p ${BUILD}/${MOUNT_POINT_NAME}",

    "mmd -i ${BUILD}/${DISK_IMAGE_NAME} ::/EFI",
    "mmd -i ${BUILD}/${DISK_IMAGE_NAME} ::/EFI/BOOT",
    "mcopy -i ${BUILD}/${DISK_IMAGE_NAME} ${BUILD}/${BOOTLOADER_NAME}.efi ::/EFI/BOOT/BOOTX64.EFI",
    "mcopy -i ${BUILD}/${DISK_IMAGE_NAME} ${BUILD}/${KERNEL_NAME}.elf ::/${KERNEL_NAME}.elf",
    "mcopy -i ${BUILD}/${DISK_IMAGE_NAME} sample.txt ::/",
    "mcopy -i ${BUILD}/${DISK_IMAGE_NAME} ${BUILD}/${RPNCALC_NAME} ::/",
]

#
# run qemu
#
[tasks.run_qemu]
description = "Run QEMU with the disk image and UEFI firmware"
script = '''
qemu-system-x86_64 -enable-kvm \
    -smp 4 \
    -m 1G \
    -drive if=pflash,format=raw,readonly=on,file=${BUILD}/${OVMF_FILE_NAME} \
    -drive format=raw,file=${BUILD}/${DISK_IMAGE_NAME} \
    -serial stdio \
'''

[tasks.run_qemu_gdb]
script = '''
qemu-system-x86_64 -enable-kvm \
    -smp 4 \
    -m 1G \
    -drive if=pflash,format=raw,readonly=on,file=${BUILD}/${OVMF_FILE_NAME} \
    -drive format=raw,file=${BUILD}/${DISK_IMAGE_NAME} \
    -serial stdio \
    -d int,cpu_reset,guest_errors,mmu \
    -s -S \
'''

[tasks.run_qemu_nographic]
script = '''
qemu-system-x86_64 -enable-kvm \
    -smp 4 \
    -m 1G \
    -drive if=pflash,format=raw,readonly=on,file=${BUILD}/${OVMF_FILE_NAME} \
    -drive format=raw,file=${BUILD}/${DISK_IMAGE_NAME} \
    -nographic \
'''

[tasks.run_qemu_test]
script = '''
set +e

qemu-system-x86_64 -enable-kvm \
    -smp 4 \
    -m 1G \
    -drive if=pflash,format=raw,readonly=on,file=${BUILD}/${OVMF_FILE_NAME} \
    -drive format=raw,file=${BUILD}/${DISK_IMAGE_NAME} \
    -serial stdio \
    -device isa-debug-exit,iobase=0xf4,iosize=0x04 \
    -display none

EXIT_CODE=$?

if [ "$EXIT_CODE" -eq 33 ]; then
    echo "Test Success"
    exit 0
elif [ "$EXIT_CODE" -eq 35 ]; then
    echo "Test Failed"
    exit 1
elif [ "$EXIT_CODE" -eq 124 ]; then
    echo "Timed out"
    exit 1
else
    echo "Unexpected Exit Code: $EXIT_CODE"
    exit 1
fi
'''


[tasks.pre_build]
script = ["rm -rf ${BUILD}", "mkdir ${BUILD}", "cp ${OVMF_FILE_NAME} ${BUILD}"]

[tasks.build_bootloader_debug]
description = "Build the bootloader and copy it to the build directory."
script = [
    "cd ${BOOTLOADER_NAME}",
    "cargo build",
    "cd ..",
    "cp ./${BOOTLOADER_NAME}/target/x86_64-unknown-uefi/debug/${BOOTLOADER_NAME}.efi ${BUILD}/${BOOTLOADER_NAME}.efi",
]

[tasks.build_kernel_debug]
description = "Build the kernel and copy it to the build directory."
script = [
    "cd ${KERNEL_NAME}",
    "cargo  build",
    "cd ..",
    "cp ./${KERNEL_NAME}/target/${KERNEL_BUILD_TARGET_NAME}/debug/${KERNEL_NAME}.elf ${BUILD}/${KERNEL_NAME}.elf",
]

[tasks.build_rpncalc_debug]
description = "Build the rpncalc and copy it to the build directory."
script = [
    "cd ${APPS_DIR}/${RPNCALC_NAME}",
    "cargo build",
    "cd ../../",
    "cp ./${APPS_DIR}/${RPNCALC_NAME}/target/${APPS_BUILD_TARGET_NAME}/debug/${RPNCALC_NAME} ${BUILD}/${RPNCALC_NAME}",
]


[tasks.build_bootloader_debug_full]
script = [
    "cd ${BOOTLOADER_NAME}",
    "RUSTFLAGS=\"-C debuginfo=2\" cargo build",
    "cd ..",
    "cp ./${BOOTLOADER_NAME}/target/x86_64-unknown-uefi/debug/${BOOTLOADER_NAME}.efi ${BUILD}/${BOOTLOADER_NAME}.efi",
]

[tasks.build_kernel_debug_full]
script = [
    "cd ${KERNEL_NAME}",
    "RUSTFLAGS=\"-C debuginfo=2\" cargo build",
    "cd ..",
    "cp ./${KERNEL_NAME}/target/${KERNEL_BUILD_TARGET_NAME}/debug/${KERNEL_NAME}.elf ${BUILD}/${KERNEL_NAME}.elf",
]

[tasks.build_kernel_test]
description = "Build the kernel for testing."
script = [
    "cd ${KERNEL_NAME}",
    "cp $(cargo test --no-run --message-format=json | jq -r 'select(.profile.test == true) | .filenames[]') ../${BUILD}/${KERNEL_NAME}.elf",
    "cd ..",
]

[tasks.build_debug]
description = "Create a bootable image for debug."
dependencies = [
    "pre_build",
    "build_bootloader_debug",
    "build_kernel_debug",
    "build_rpncalc_debug",
    "make_image",
]

[tasks.build_debug_full]
dependencies = [
    "pre_build",
    "build_bootloader_debug_full",
    "build_kernel_debug_full",
    "build_rpncalc_debug",
    "make_image",
]

[tasks.build_test]
dependencies = [
    "pre_build",
    "build_bootloader_debug",
    "build_kernel_test",
    "make_image",
]

[tasks.run_debug]
dependencies = ["build_debug", "run_qemu"]

[tasks.run_debug_gdb]
dependencies = ["build_debug_full", "run_qemu_gdb"]

[tasks.run_test]
dependencies = ["build_test", "run_qemu_test"]


[tasks.run_debug_nographic]
dependencies = ["build_debug", "run_qemu_nographic"]
